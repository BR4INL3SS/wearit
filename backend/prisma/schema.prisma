// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  quantityOnHand Int
  price Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lines Line[]
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  firstName String
  lastName String
  password String
  role Role @default(customer)
  orders Order[]
  feedbacks Feedback[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  customer
  admin
}

model Line {
  id Int @id @default(autoincrement())
  product Product @relation(fields: [productId], references: [id] )
  productId Int
  order Order @relation(fields: [orderId], references: [id] )
  orderId Int
  quantity Int
  total Float
}

model Order {
  id Int @id @default(autoincrement())
  status OrderStatus @default(pending)
  total Float
  user User @relation(fields: [userId], references: [id] )
  userId Int
  lines Line[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  canceled
  confirmed
  pending
  completed
}

model Store {
  id Int @id @default(autoincrement())
  name String
  city String
  address String
  openingHours String
  phoneNumber String
  feedbacks Feedback[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feedback {
  id Int @id @default(autoincrement())
  feedback String
  user User @relation(fields: [userId], references: [id] )
  userId Int
  store Store @relation(fields: [storeId], references: [id] )
  storeId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}